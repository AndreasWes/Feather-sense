import board
import busio
import adafruit_pcf8523
import digitalio
import os
import adafruit_sdcard
import storage
import adafruit_lsm6ds.lsm6ds33
import microcontroller
import time
import neopixel
import adafruit_bmp280
import adafruit_lis3mdl
import adafruit_sht31d

i2c = board.I2C()
lsm6ds33 = adafruit_lsm6ds.lsm6ds33.LSM6DS33(i2c)
#myI2C = busio.I2C(board.SCL, board.SDA)
rtc = adafruit_pcf8523.PCF8523(i2c)
#rtc = adafruit_pcf8523.PCF8523(myI2C)
days = ("Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday")
t = rtc.datetime

lis3mdl = adafruit_lis3mdl.LIS3MDL(i2c)
bmp280 = adafruit_bmp280.Adafruit_BMP280_I2C(i2c)
sht31d = adafruit_sht31d.SHT31D(i2c)

#Initialisierung der SD Karte
spi = busio.SPI(board.SCK, MOSI=board.MOSI, MISO=board.MISO)
#use a digitalio pin 10 for breakout wiring:
cs = digitalio.DigitalInOut(board.D10)
sdcard = adafruit_sdcard.SDCard(spi, cs)
vfs = storage.VfsFat(sdcard)
storage.mount(vfs, "/sd")

led = digitalio.DigitalInOut(board.BLUE_LED)
led.direction = digitalio.Direction.OUTPUT



neo = neopixel.NeoPixel(board.NEOPIXEL, 1)
neo.brightness = 0.3

button=digitalio.DigitalInOut(board.SWITCH)
button.direction = digitalio.Direction.INPUT
button.pull = digitalio.Pull.UP
status=1
altbutton=0

print("Acceleration: {:.2f} {:.2f} {:.2f} m/s^2".format(*lsm6ds33.acceleration))


print("Logging temperature to filesystem")
# append to the file!


with open("/sd/datalogging.csv", "a") as f:

            led.value = True  # turn on LED to indicate we're writing to the file
            print("The date is %s %d/%d/%d" % (days[t.tm_wday], t.tm_mday, t.tm_mon, t.tm_year))
            f.write("date %s %d/%d/%d\n time %d:%02d:%02d \n timestamp, temperature,pressure, magnetic x,magnetic y,magnetic z,accel x,accel y,accel z, gyro x, gyro y, gyro z, humidity \n s,deg C,hPa,uTesla,uTesla,uTesla,m/s^2,m/s^2,m/s^2,deg/s,deg/s,deg/s,pecent \n" % (days[t.tm_wday], t.tm_mday, t.tm_mon, t.tm_year,t.tm_hour, t.tm_min, t.tm_sec))
            print("date %s %d/%d/%d\n time %d:%02d:%02d \n" % (days[t.tm_wday], t.tm_mday, t.tm_mon, t.tm_year,t.tm_hour, t.tm_min, t.tm_sec))
            led.value = False  # turn off LED to indicate we're done
        # file is saved


while True:
    if button.value!=altbutton:
        status+=1
    else:
        status=status

    if status/2 %2==0:
        neo[0] = (0, 255, 0)
        # open file for append
        with open("/sd/datalogging.csv", "a") as f:
            led.value = True  # turn on LED to indicate we're writing to the file
            print("{},{:.1f},{},{:.3f},{:.3f},{:.3f},{:.2f},{:.2f},{:.2f},{:.2f},{:.2f},{:.2f},{:.1f} \n".format(time.monotonic(),bmp280.temperature,bmp280.pressure,lis3mdl.magnetic[0],lis3mdl.magnetic[1],lis3mdl.magnetic[2],lsm6ds33.acceleration[0],lsm6ds33.acceleration[1],lsm6ds33.acceleration[2],lsm6ds33.gyro[0],lsm6ds33.gyro[1],lsm6ds33.gyro[2],sht31d.relative_humidity))
            f.write("{},{:.1f},{},{:.3f},{:.3f},{:.3f},{:.2f},{:.2f},{:.2f},{:.2f},{:.2f},{:.2f},{:.1f} \n".format(time.monotonic(),bmp280.temperature,bmp280.pressure,lis3mdl.magnetic[0],lis3mdl.magnetic[1],lis3mdl.magnetic[2],lsm6ds33.acceleration[0],lsm6ds33.acceleration[1],lsm6ds33.acceleration[2],lsm6ds33.gyro[0],lsm6ds33.gyro[1],lsm6ds33.gyro[2],sht31d.relative_humidity))
            led.value = False  # turn off LED to indicate we're done
        # file is saved

    else:
        neo[0] = (255, 0, 0)

    altbutton=button.value
    print(button.value)
    print(status)
    time.sleep(0.01)

